# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/


Wetstamp.DEFAULTS =
    rotate: 0
    transparency: 0.25
    position: <%= Magick::SouthEastGravity.to_i %>
    tiled: false

class Wetstamp.StampPreset

  constructor: (preset) ->
    {@rotate, @transparency, @position, @tiled} = $.extend( {}, Wetstamp.DEFAULTS, preset.data() );
    preset.on "click", () =>
      @applyToForm()
    @

  applyToForm: =>
    $("input[name='stamp[rotate]']").val(@rotate)
    $("input[name='stamp[transparency]']").val(@transparency)
    $("input[name='stamp[position]']").val(@position)
    $("input[name='stamp[tiled]']").prop("checked", @tiled)
    @

class Wetstamp.Stamp

  constructor: (json) ->
    @id = json.id
    @url = json.image.url

  urlObject: =>
    obj = document.createElement('a')
    obj.href = @url
    obj

  fileName: =>
    pathArr = @urlObject().pathname.split('/')
    pathArr[pathArr.length - 1]


$(document).ready ->

  for presetLink in $("a[data-role='watermark-preset']")
    new Wetstamp.StampPreset($(presetLink))

  $("a[data-role='watermark-customize']").on "click", () ->
    $("form").toggle()

  $("#new_stamp_image").on "ajax:remotipartComplete", (e, data) ->
    stamp_json = JSON.parse(data.responseText)
    stamp = new Wetstamp.Stamp(stamp_json)
    window.foo = stamp
    $("#watermark-preview watermark").html("<img src='"+stamp.url+"' alt='"+stamp.fileName()+"'/>")