# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

Wetstamp.POSITIONS = 
  <%= Magick::NorthWestGravity.to_i %>:
    {top: 0, left: 0}
  <%= Magick::NorthGravity.to_i %>:
    {top: 0, left: "50%", translate: {x: "-50%", y: "0%"}}
  <%= Magick::NorthEastGravity.to_i %>:
    {top: 0, right: 0}
  <%= Magick::WestGravity.to_i %>:
    {top: "50%", left: 0}
  <%= Magick::CenterGravity.to_i %>:
    {top: "50%", left: "50%", translate: {x: "-50%", y: "-50%"}}
  <%= Magick::EastGravity.to_i %>:
    {top: "50%", right: 0}
  <%= Magick::SouthWestGravity.to_i %>:
    {bottom: 0, left: 0}
  <%= Magick::SouthGravity.to_i %>:
    {bottom: 0, left: "50%", translate: {x: "-50%", y: "0%"}}
  <%= Magick::SouthEastGravity.to_i %>:
    {bottom: 0, right: 0}

Wetstamp.DEFAULTS =
    rotate: 0
    transparency: 0.25
    translate:
      x: 0
      y: 0
    position: <%= Magick::SouthEastGravity.to_i %>
    tiled: false

class Wetstamp.StampPreset

  constructor: (preset) ->
    {@rotate, @transparency, @position, @tiled, @translate} = $.extend( {}, Wetstamp.DEFAULTS, preset.data() );
    
    @positionID = @position
    @position  = Wetstamp.POSITIONS[parseInt(@positionID, 10)]

    if @position["translate"]
      @translate = @position["translate"]

    preset.on "click", () =>
      @applyToForm()
      Wetstamp.stamp.setPosition(@)
    @

  applyToForm: =>
    $("input[name='stamp[rotate]']").val(@rotate)
    $("input[name='stamp[transparency]']").val(@transparency)
    $("input[name='stamp[position]']").val(@position)
    $("input[name='stamp[tiled]']").prop("checked", @tiled)
    @

  positionStyle: =>
    (for pos in ["top", "right", "bottom", "left"]
      val = @position[pos]
      if val?
        pos+":"+val+";"
    ).join("")

  rotateStyle: =>
    "rotate("+@rotate+"deg)"

  translateStyle: =>
    if (@rotate == -90) && (@positionID == <%= Magick::SouthWestGravity.to_i %>)
      @translate =
        x: 0
        y: "100%"
    "translate(" + @translate.x + "," + @translate.y + ")"

  transformStyle: =>
    style = "-webkit-transform: "+[@rotateStyle(), @translateStyle()].join(" ")+";"

  transparencyStyle: =>
    "opacity: "+@transparency

  style: =>
    @positionStyle() + @transformStyle() + @transparencyStyle()

class Wetstamp.Stamp

  constructor: (json) ->
    @id = json.id
    @url = json.image.url
    @el = $("#watermark")
    @redraw()
    @style = ""
    @

  urlObject: =>
    obj = document.createElement('a')
    obj.href = @url
    obj

  fileName: =>
    pathArr = @urlObject().pathname.split('/')
    pathArr[pathArr.length - 1]

  setPosition: (stamp_preset) =>
    @style = stamp_preset.style()
    @redraw()

  redraw: =>
    @el.html("<img src='"+@url+"' alt='"+@fileName()+"' style='"+@style+"'/>")

$(document).ready ->

  Wetstamp.STAMP_PRESETS = []
  for presetLink in $("a[data-role='watermark-preset']")
    preset = new Wetstamp.StampPreset($(presetLink))
    Wetstamp.STAMP_PRESETS.push preset

  $("a[data-role='watermark-customize']").on "click", () ->
    $("form").toggle()

  # $("#new_stamp_image").on "ajax:remotipartComplete", (e, data) ->
  stamp_json = {id: 1, image: {url: "<%= StampImage.last.image.url %>" }}#JSON.parse(data.responseText)
  stamp = new Wetstamp.Stamp(stamp_json)
  Wetstamp.stamp = stamp
  Wetstamp.stamp.setPosition(Wetstamp.STAMP_PRESETS[0])
